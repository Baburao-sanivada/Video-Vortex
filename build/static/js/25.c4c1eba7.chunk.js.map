{"version":3,"file":"static/js/25.c4c1eba7.chunk.js","mappings":"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","sources":["Components/SearchShimmer.js","Components/SearchVideoCard.js","Components/SearchResultsPage.js","utils/PublishedData.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst SearchShimmer = () => {\r\n  return (\r\n    <div className='grid md:grid-cols-12  bg-gray-50 mb-2 dark:bg-slate-800 max-sm:px-10 max-sm:pb-10'>\r\n        {/* Thumbnail */}\r\n        <div className='md:col-span-3 col-span-12 bg-gray-300 mr-2 rounded-lg dark:bg-slate-600 h-40'></div>\r\n\r\n        {/* Details */}\r\n        <div className='max-md:h-40 md:col-span-8 col-span-12 bg-gray-100 grid grid-rows-4 py-1 dark:bg-slate-800'>\r\n            <div className='row-span-1  py-2 w-11/12'><p className='bg-gray-300 h-1/2 rounded-lg '></p> </div>\r\n            <div className='row-span-1  py-2 w-11/12'><p className='bg-gray-300 h-1/2 rounded-lg '></p> </div>\r\n            <div className='row-span-1  py-2 w-3/4'><p className='bg-gray-300 h-1/2 rounded-lg'></p> </div>\r\n            <div className='row-span-1  py-2 w-1/2'><p className='bg-gray-300 h-1/2 rounded-lg'></p> </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchShimmer","import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { channelImage_api } from '../utils/constants';\r\nimport { PublishedTimeOfVideo } from '../utils/PublishedData';\r\nimport SearchShimmer from './SearchShimmer';\r\n\r\n// Each Video Card in Search Results Page\r\nconst SearchVideoCard = ({data}) => {\r\n  const [details,setDetails]=useState(null);\r\n    \r\n  useEffect(()=>{\r\n      getChannelImage();\r\n  },[])\r\n\r\n  // Getting Channel Data with Channel Id\r\n  const getChannelImage=async ()=>{\r\n      const api_data=await fetch(channelImage_api+\"&id=\"+data?.channelId);\r\n      const json=await api_data.json();\r\n      setDetails(json);\r\n      // console.log(json);\r\n  }\r\n\r\n  // Loading Shimmer\r\n  if(details==null) return <SearchShimmer/>\r\n  const imgUrl=details?.items[0].snippet?.thumbnails?.high?.url || {};\r\n\r\n\r\n  return (\r\n    <div className='flex max-sm:flex-col flex-row bg-gray-50 py-2 dark:bg-slate-800 max-sm:px-10 max-sm:pb-10'>\r\n      {/* Thumbnail */}\r\n        <img className=\"flex justify-center rounded-lg h-40 max-sm:w-full\" src={data?.thumbnails?.medium?.url}/>\r\n        {/* Video Details */}\r\n        <div className='px-2 w-full flex flex-col'>\r\n            <span className='font-semibold text-lg dark:text-white'>{data?.title}</span>\r\n            <p className='text-sm text-slate-600 mb-2 dark:text-slate-300'>{PublishedTimeOfVideo(data?.publishedAt)}</p>\r\n            <div className='flex items-center'><img className=\"w-8 my-2 rounded-full\" src={imgUrl}></img>\r\n            <span className='flex items-center px-2 text-slate-700 text-sm dark:text-slate-200 '>{data?.channelTitle}</span>\r\n            </div>\r\n            {/* Video Description */}\r\n            <span className='text-sm text-slate-700 dark:text-slate-300'>{data?.description}</span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchVideoCard","import React, { useEffect ,useState} from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { Google_api_key, Search_results_api } from '../utils/constants'\r\nimport SearchVideoCard from './SearchVideoCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setChannelId } from '../utils/channelIdSlice'\r\nimport { closeMenu } from '../utils/appSlice'\r\n\r\n// Search Results\r\nconst SearchResultsPage = () => {\r\n  const [params]=useSearchParams();\r\n  const query=params.get(\"q\");\r\n  const [searchresults,setSearchResults]=useState([]);\r\n  const dispatcher=useDispatch();\r\n\r\n  useEffect(()=>{\r\n    getSearchData();\r\n    dispatcher(closeMenu())\r\n  },[query])\r\n\r\n  const getSearchData=async ()=>{\r\n    const data=await fetch(Search_results_api+query+\"&key=\"+Google_api_key);\r\n    const json=await data.json();\r\n    setSearchResults(json?.items);\r\n  } \r\n\r\n  return (\r\n    <div className='p-2 w-full dark:bg-slate-800 overflow-y-hidden'>\r\n      {\r\n        searchresults.map((result)=> <Link \r\n        key={result?.id?.videoId} \r\n        to={\"/watch?v=\"+result?.id?.videoId} \r\n        onClick={()=>{\r\n          dispatcher(setChannelId(result?.snippet?.channelId))\r\n        }}>\r\n\r\n        <SearchVideoCard \r\n        data={result?.snippet}/>\r\n        </Link>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResultsPage","export const PublishedTimeOfVideo = (publishedAt) => {\r\n\tconst publishedDate = new Date(publishedAt);\r\n\tconst currentDate = new Date();\r\n\tif (currentDate.getFullYear() - publishedDate.getFullYear()) {\r\n\t\treturn (\r\n\t\t\tcurrentDate.getFullYear() -\r\n\t\t\tpublishedDate.getFullYear() +\r\n\t\t\t\" years ago\"\r\n\t\t);\r\n\t} else {\r\n\t\tif (currentDate.getMonth() - publishedDate.getMonth()) {\r\n\t\t\treturn (\r\n\t\t\t\tcurrentDate.getMonth() -\r\n\t\t\t\tpublishedDate.getMonth() +\r\n\t\t\t\t\" months ago\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif(currentDate.getDate() - publishedDate.getDate()==0) return \"Today\";\r\n\t\t\tif(currentDate.getDate() - publishedDate.getDate()==1) return \"1 day ago\";\r\n\t\t\treturn (\r\n\t\t\t\tcurrentDate.getDate() - publishedDate.getDate() + \" days ago\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};"],"names":["_jsxs","className","children","_jsx","_ref","_details$items$0$snip","_details$items$0$snip2","_details$items$0$snip3","_data$thumbnails","_data$thumbnails$medi","data","_useState","useState","_useState2","_slicedToArray","details","setDetails","useEffect","getChannelImage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","api_data","json","wrap","_context","prev","next","fetch","channelImage_api","channelId","sent","stop","apply","arguments","SearchShimmer","imgUrl","items","snippet","thumbnails","high","url","src","medium","title","PublishedTimeOfVideo","publishedAt","channelTitle","description","_useSearchParams","useSearchParams","query","get","searchresults","setSearchResults","dispatcher","useDispatch","getSearchData","closeMenu","Search_results_api","Google_api_key","map","result","_result$id","_result$id2","Link","to","id","videoId","onClick","_result$snippet","setChannelId","SearchVideoCard","publishedDate","Date","currentDate","getFullYear","getMonth","getDate"],"sourceRoot":""}